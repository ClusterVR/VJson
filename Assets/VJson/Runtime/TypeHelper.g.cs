//
// Copyright (c) 2019- yutopp (yutopp@gmail.com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at  https://www.boost.org/LICENSE_1_0.txt)
//

// THIS FILE IS AUTOMATICALLY GENERATED from TypeHelper.g.template.cs

using System;
using System.Collections.Generic;

namespace VJson
{
    static partial class TypeHelper
    {
        private static readonly new Dictionary<Type, Dictionary<Type, Func<object, object>>> _convTable =
            new Dictionary<Type, Dictionary<Type, Func<object, object>>>
            {
                {
                    typeof(bool), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(bool), o => ConvertFromBoolToBool((bool)o) },
                    }
                },
                {
                    typeof(byte), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromByteToByte((byte)o) },
                        { typeof(sbyte), o => ConvertFromByteToSbyte((byte)o) },
                        { typeof(char), o => ConvertFromByteToChar((byte)o) },
                        { typeof(decimal), o => ConvertFromByteToDecimal((byte)o) },
                        { typeof(double), o => ConvertFromByteToDouble((byte)o) },
                        { typeof(float), o => ConvertFromByteToFloat((byte)o) },
                        { typeof(int), o => ConvertFromByteToInt((byte)o) },
                        { typeof(uint), o => ConvertFromByteToUint((byte)o) },
                        { typeof(long), o => ConvertFromByteToLong((byte)o) },
                        { typeof(ulong), o => ConvertFromByteToUlong((byte)o) },
                        { typeof(short), o => ConvertFromByteToShort((byte)o) },
                        { typeof(ushort), o => ConvertFromByteToUshort((byte)o) },
                    }
                },
                {
                    typeof(sbyte), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromSbyteToByte((sbyte)o) },
                        { typeof(sbyte), o => ConvertFromSbyteToSbyte((sbyte)o) },
                        { typeof(char), o => ConvertFromSbyteToChar((sbyte)o) },
                        { typeof(decimal), o => ConvertFromSbyteToDecimal((sbyte)o) },
                        { typeof(double), o => ConvertFromSbyteToDouble((sbyte)o) },
                        { typeof(float), o => ConvertFromSbyteToFloat((sbyte)o) },
                        { typeof(int), o => ConvertFromSbyteToInt((sbyte)o) },
                        { typeof(uint), o => ConvertFromSbyteToUint((sbyte)o) },
                        { typeof(long), o => ConvertFromSbyteToLong((sbyte)o) },
                        { typeof(ulong), o => ConvertFromSbyteToUlong((sbyte)o) },
                        { typeof(short), o => ConvertFromSbyteToShort((sbyte)o) },
                        { typeof(ushort), o => ConvertFromSbyteToUshort((sbyte)o) },
                    }
                },
                {
                    typeof(char), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromCharToByte((char)o) },
                        { typeof(sbyte), o => ConvertFromCharToSbyte((char)o) },
                        { typeof(char), o => ConvertFromCharToChar((char)o) },
                        { typeof(decimal), o => ConvertFromCharToDecimal((char)o) },
                        { typeof(double), o => ConvertFromCharToDouble((char)o) },
                        { typeof(float), o => ConvertFromCharToFloat((char)o) },
                        { typeof(int), o => ConvertFromCharToInt((char)o) },
                        { typeof(uint), o => ConvertFromCharToUint((char)o) },
                        { typeof(long), o => ConvertFromCharToLong((char)o) },
                        { typeof(ulong), o => ConvertFromCharToUlong((char)o) },
                        { typeof(short), o => ConvertFromCharToShort((char)o) },
                        { typeof(ushort), o => ConvertFromCharToUshort((char)o) },
                    }
                },
                {
                    typeof(decimal), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(decimal), o => ConvertFromDecimalToDecimal((decimal)o) },
                        { typeof(double), o => ConvertFromDecimalToDouble((decimal)o) },
                        { typeof(float), o => ConvertFromDecimalToFloat((decimal)o) },
                    }
                },
                {
                    typeof(double), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(decimal), o => ConvertFromDoubleToDecimal((double)o) },
                        { typeof(double), o => ConvertFromDoubleToDouble((double)o) },
                        { typeof(float), o => ConvertFromDoubleToFloat((double)o) },
                    }
                },
                {
                    typeof(float), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(decimal), o => ConvertFromFloatToDecimal((float)o) },
                        { typeof(double), o => ConvertFromFloatToDouble((float)o) },
                        { typeof(float), o => ConvertFromFloatToFloat((float)o) },
                    }
                },
                {
                    typeof(int), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromIntToByte((int)o) },
                        { typeof(sbyte), o => ConvertFromIntToSbyte((int)o) },
                        { typeof(char), o => ConvertFromIntToChar((int)o) },
                        { typeof(decimal), o => ConvertFromIntToDecimal((int)o) },
                        { typeof(double), o => ConvertFromIntToDouble((int)o) },
                        { typeof(float), o => ConvertFromIntToFloat((int)o) },
                        { typeof(int), o => ConvertFromIntToInt((int)o) },
                        { typeof(uint), o => ConvertFromIntToUint((int)o) },
                        { typeof(long), o => ConvertFromIntToLong((int)o) },
                        { typeof(ulong), o => ConvertFromIntToUlong((int)o) },
                        { typeof(short), o => ConvertFromIntToShort((int)o) },
                        { typeof(ushort), o => ConvertFromIntToUshort((int)o) },
                    }
                },
                {
                    typeof(uint), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromUintToByte((uint)o) },
                        { typeof(sbyte), o => ConvertFromUintToSbyte((uint)o) },
                        { typeof(char), o => ConvertFromUintToChar((uint)o) },
                        { typeof(decimal), o => ConvertFromUintToDecimal((uint)o) },
                        { typeof(double), o => ConvertFromUintToDouble((uint)o) },
                        { typeof(float), o => ConvertFromUintToFloat((uint)o) },
                        { typeof(int), o => ConvertFromUintToInt((uint)o) },
                        { typeof(uint), o => ConvertFromUintToUint((uint)o) },
                        { typeof(long), o => ConvertFromUintToLong((uint)o) },
                        { typeof(ulong), o => ConvertFromUintToUlong((uint)o) },
                        { typeof(short), o => ConvertFromUintToShort((uint)o) },
                        { typeof(ushort), o => ConvertFromUintToUshort((uint)o) },
                    }
                },
                {
                    typeof(long), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromLongToByte((long)o) },
                        { typeof(sbyte), o => ConvertFromLongToSbyte((long)o) },
                        { typeof(char), o => ConvertFromLongToChar((long)o) },
                        { typeof(decimal), o => ConvertFromLongToDecimal((long)o) },
                        { typeof(double), o => ConvertFromLongToDouble((long)o) },
                        { typeof(float), o => ConvertFromLongToFloat((long)o) },
                        { typeof(int), o => ConvertFromLongToInt((long)o) },
                        { typeof(uint), o => ConvertFromLongToUint((long)o) },
                        { typeof(long), o => ConvertFromLongToLong((long)o) },
                        { typeof(ulong), o => ConvertFromLongToUlong((long)o) },
                        { typeof(short), o => ConvertFromLongToShort((long)o) },
                        { typeof(ushort), o => ConvertFromLongToUshort((long)o) },
                    }
                },
                {
                    typeof(ulong), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromUlongToByte((ulong)o) },
                        { typeof(sbyte), o => ConvertFromUlongToSbyte((ulong)o) },
                        { typeof(char), o => ConvertFromUlongToChar((ulong)o) },
                        { typeof(decimal), o => ConvertFromUlongToDecimal((ulong)o) },
                        { typeof(double), o => ConvertFromUlongToDouble((ulong)o) },
                        { typeof(float), o => ConvertFromUlongToFloat((ulong)o) },
                        { typeof(int), o => ConvertFromUlongToInt((ulong)o) },
                        { typeof(uint), o => ConvertFromUlongToUint((ulong)o) },
                        { typeof(long), o => ConvertFromUlongToLong((ulong)o) },
                        { typeof(ulong), o => ConvertFromUlongToUlong((ulong)o) },
                        { typeof(short), o => ConvertFromUlongToShort((ulong)o) },
                        { typeof(ushort), o => ConvertFromUlongToUshort((ulong)o) },
                    }
                },
                {
                    typeof(short), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromShortToByte((short)o) },
                        { typeof(sbyte), o => ConvertFromShortToSbyte((short)o) },
                        { typeof(char), o => ConvertFromShortToChar((short)o) },
                        { typeof(decimal), o => ConvertFromShortToDecimal((short)o) },
                        { typeof(double), o => ConvertFromShortToDouble((short)o) },
                        { typeof(float), o => ConvertFromShortToFloat((short)o) },
                        { typeof(int), o => ConvertFromShortToInt((short)o) },
                        { typeof(uint), o => ConvertFromShortToUint((short)o) },
                        { typeof(long), o => ConvertFromShortToLong((short)o) },
                        { typeof(ulong), o => ConvertFromShortToUlong((short)o) },
                        { typeof(short), o => ConvertFromShortToShort((short)o) },
                        { typeof(ushort), o => ConvertFromShortToUshort((short)o) },
                    }
                },
                {
                    typeof(ushort), new Dictionary<Type, Func<object, object>>
                    {
                        { typeof(byte), o => ConvertFromUshortToByte((ushort)o) },
                        { typeof(sbyte), o => ConvertFromUshortToSbyte((ushort)o) },
                        { typeof(char), o => ConvertFromUshortToChar((ushort)o) },
                        { typeof(decimal), o => ConvertFromUshortToDecimal((ushort)o) },
                        { typeof(double), o => ConvertFromUshortToDouble((ushort)o) },
                        { typeof(float), o => ConvertFromUshortToFloat((ushort)o) },
                        { typeof(int), o => ConvertFromUshortToInt((ushort)o) },
                        { typeof(uint), o => ConvertFromUshortToUint((ushort)o) },
                        { typeof(long), o => ConvertFromUshortToLong((ushort)o) },
                        { typeof(ulong), o => ConvertFromUshortToUlong((ushort)o) },
                        { typeof(short), o => ConvertFromUshortToShort((ushort)o) },
                        { typeof(ushort), o => ConvertFromUshortToUshort((ushort)o) },
                    }
                },
            };

        private static object ConvertFromBoolToBool(bool o) {
            return (bool)o;
        }

        private static object ConvertFromByteToByte(byte o) {
            return (byte)o;
        }

        private static object ConvertFromByteToSbyte(byte o) {
            return (sbyte)o;
        }

        private static object ConvertFromByteToChar(byte o) {
            return (char)o;
        }

        private static object ConvertFromByteToDecimal(byte o) {
            return (decimal)o;
        }

        private static object ConvertFromByteToDouble(byte o) {
            return (double)o;
        }

        private static object ConvertFromByteToFloat(byte o) {
            return (float)o;
        }

        private static object ConvertFromByteToInt(byte o) {
            return (int)o;
        }

        private static object ConvertFromByteToUint(byte o) {
            return (uint)o;
        }

        private static object ConvertFromByteToLong(byte o) {
            return (long)o;
        }

        private static object ConvertFromByteToUlong(byte o) {
            return (ulong)o;
        }

        private static object ConvertFromByteToShort(byte o) {
            return (short)o;
        }

        private static object ConvertFromByteToUshort(byte o) {
            return (ushort)o;
        }

        private static object ConvertFromSbyteToByte(sbyte o) {
            return (byte)o;
        }

        private static object ConvertFromSbyteToSbyte(sbyte o) {
            return (sbyte)o;
        }

        private static object ConvertFromSbyteToChar(sbyte o) {
            return (char)o;
        }

        private static object ConvertFromSbyteToDecimal(sbyte o) {
            return (decimal)o;
        }

        private static object ConvertFromSbyteToDouble(sbyte o) {
            return (double)o;
        }

        private static object ConvertFromSbyteToFloat(sbyte o) {
            return (float)o;
        }

        private static object ConvertFromSbyteToInt(sbyte o) {
            return (int)o;
        }

        private static object ConvertFromSbyteToUint(sbyte o) {
            return (uint)o;
        }

        private static object ConvertFromSbyteToLong(sbyte o) {
            return (long)o;
        }

        private static object ConvertFromSbyteToUlong(sbyte o) {
            return (ulong)o;
        }

        private static object ConvertFromSbyteToShort(sbyte o) {
            return (short)o;
        }

        private static object ConvertFromSbyteToUshort(sbyte o) {
            return (ushort)o;
        }

        private static object ConvertFromCharToByte(char o) {
            return (byte)o;
        }

        private static object ConvertFromCharToSbyte(char o) {
            return (sbyte)o;
        }

        private static object ConvertFromCharToChar(char o) {
            return (char)o;
        }

        private static object ConvertFromCharToDecimal(char o) {
            return (decimal)o;
        }

        private static object ConvertFromCharToDouble(char o) {
            return (double)o;
        }

        private static object ConvertFromCharToFloat(char o) {
            return (float)o;
        }

        private static object ConvertFromCharToInt(char o) {
            return (int)o;
        }

        private static object ConvertFromCharToUint(char o) {
            return (uint)o;
        }

        private static object ConvertFromCharToLong(char o) {
            return (long)o;
        }

        private static object ConvertFromCharToUlong(char o) {
            return (ulong)o;
        }

        private static object ConvertFromCharToShort(char o) {
            return (short)o;
        }

        private static object ConvertFromCharToUshort(char o) {
            return (ushort)o;
        }

        private static object ConvertFromDecimalToDecimal(decimal o) {
            return (decimal)o;
        }

        private static object ConvertFromDecimalToDouble(decimal o) {
            return (double)o;
        }

        private static object ConvertFromDecimalToFloat(decimal o) {
            return (float)o;
        }

        private static object ConvertFromDoubleToDecimal(double o) {
            return (decimal)o;
        }

        private static object ConvertFromDoubleToDouble(double o) {
            return (double)o;
        }

        private static object ConvertFromDoubleToFloat(double o) {
            return (float)o;
        }

        private static object ConvertFromFloatToDecimal(float o) {
            return (decimal)o;
        }

        private static object ConvertFromFloatToDouble(float o) {
            return (double)o;
        }

        private static object ConvertFromFloatToFloat(float o) {
            return (float)o;
        }

        private static object ConvertFromIntToByte(int o) {
            return (byte)o;
        }

        private static object ConvertFromIntToSbyte(int o) {
            return (sbyte)o;
        }

        private static object ConvertFromIntToChar(int o) {
            return (char)o;
        }

        private static object ConvertFromIntToDecimal(int o) {
            return (decimal)o;
        }

        private static object ConvertFromIntToDouble(int o) {
            return (double)o;
        }

        private static object ConvertFromIntToFloat(int o) {
            return (float)o;
        }

        private static object ConvertFromIntToInt(int o) {
            return (int)o;
        }

        private static object ConvertFromIntToUint(int o) {
            return (uint)o;
        }

        private static object ConvertFromIntToLong(int o) {
            return (long)o;
        }

        private static object ConvertFromIntToUlong(int o) {
            return (ulong)o;
        }

        private static object ConvertFromIntToShort(int o) {
            return (short)o;
        }

        private static object ConvertFromIntToUshort(int o) {
            return (ushort)o;
        }

        private static object ConvertFromUintToByte(uint o) {
            return (byte)o;
        }

        private static object ConvertFromUintToSbyte(uint o) {
            return (sbyte)o;
        }

        private static object ConvertFromUintToChar(uint o) {
            return (char)o;
        }

        private static object ConvertFromUintToDecimal(uint o) {
            return (decimal)o;
        }

        private static object ConvertFromUintToDouble(uint o) {
            return (double)o;
        }

        private static object ConvertFromUintToFloat(uint o) {
            return (float)o;
        }

        private static object ConvertFromUintToInt(uint o) {
            return (int)o;
        }

        private static object ConvertFromUintToUint(uint o) {
            return (uint)o;
        }

        private static object ConvertFromUintToLong(uint o) {
            return (long)o;
        }

        private static object ConvertFromUintToUlong(uint o) {
            return (ulong)o;
        }

        private static object ConvertFromUintToShort(uint o) {
            return (short)o;
        }

        private static object ConvertFromUintToUshort(uint o) {
            return (ushort)o;
        }

        private static object ConvertFromLongToByte(long o) {
            return (byte)o;
        }

        private static object ConvertFromLongToSbyte(long o) {
            return (sbyte)o;
        }

        private static object ConvertFromLongToChar(long o) {
            return (char)o;
        }

        private static object ConvertFromLongToDecimal(long o) {
            return (decimal)o;
        }

        private static object ConvertFromLongToDouble(long o) {
            return (double)o;
        }

        private static object ConvertFromLongToFloat(long o) {
            return (float)o;
        }

        private static object ConvertFromLongToInt(long o) {
            return (int)o;
        }

        private static object ConvertFromLongToUint(long o) {
            return (uint)o;
        }

        private static object ConvertFromLongToLong(long o) {
            return (long)o;
        }

        private static object ConvertFromLongToUlong(long o) {
            return (ulong)o;
        }

        private static object ConvertFromLongToShort(long o) {
            return (short)o;
        }

        private static object ConvertFromLongToUshort(long o) {
            return (ushort)o;
        }

        private static object ConvertFromUlongToByte(ulong o) {
            return (byte)o;
        }

        private static object ConvertFromUlongToSbyte(ulong o) {
            return (sbyte)o;
        }

        private static object ConvertFromUlongToChar(ulong o) {
            return (char)o;
        }

        private static object ConvertFromUlongToDecimal(ulong o) {
            return (decimal)o;
        }

        private static object ConvertFromUlongToDouble(ulong o) {
            return (double)o;
        }

        private static object ConvertFromUlongToFloat(ulong o) {
            return (float)o;
        }

        private static object ConvertFromUlongToInt(ulong o) {
            return (int)o;
        }

        private static object ConvertFromUlongToUint(ulong o) {
            return (uint)o;
        }

        private static object ConvertFromUlongToLong(ulong o) {
            return (long)o;
        }

        private static object ConvertFromUlongToUlong(ulong o) {
            return (ulong)o;
        }

        private static object ConvertFromUlongToShort(ulong o) {
            return (short)o;
        }

        private static object ConvertFromUlongToUshort(ulong o) {
            return (ushort)o;
        }

        private static object ConvertFromShortToByte(short o) {
            return (byte)o;
        }

        private static object ConvertFromShortToSbyte(short o) {
            return (sbyte)o;
        }

        private static object ConvertFromShortToChar(short o) {
            return (char)o;
        }

        private static object ConvertFromShortToDecimal(short o) {
            return (decimal)o;
        }

        private static object ConvertFromShortToDouble(short o) {
            return (double)o;
        }

        private static object ConvertFromShortToFloat(short o) {
            return (float)o;
        }

        private static object ConvertFromShortToInt(short o) {
            return (int)o;
        }

        private static object ConvertFromShortToUint(short o) {
            return (uint)o;
        }

        private static object ConvertFromShortToLong(short o) {
            return (long)o;
        }

        private static object ConvertFromShortToUlong(short o) {
            return (ulong)o;
        }

        private static object ConvertFromShortToShort(short o) {
            return (short)o;
        }

        private static object ConvertFromShortToUshort(short o) {
            return (ushort)o;
        }

        private static object ConvertFromUshortToByte(ushort o) {
            return (byte)o;
        }

        private static object ConvertFromUshortToSbyte(ushort o) {
            return (sbyte)o;
        }

        private static object ConvertFromUshortToChar(ushort o) {
            return (char)o;
        }

        private static object ConvertFromUshortToDecimal(ushort o) {
            return (decimal)o;
        }

        private static object ConvertFromUshortToDouble(ushort o) {
            return (double)o;
        }

        private static object ConvertFromUshortToFloat(ushort o) {
            return (float)o;
        }

        private static object ConvertFromUshortToInt(ushort o) {
            return (int)o;
        }

        private static object ConvertFromUshortToUint(ushort o) {
            return (uint)o;
        }

        private static object ConvertFromUshortToLong(ushort o) {
            return (long)o;
        }

        private static object ConvertFromUshortToUlong(ushort o) {
            return (ulong)o;
        }

        private static object ConvertFromUshortToShort(ushort o) {
            return (short)o;
        }

        private static object ConvertFromUshortToUshort(ushort o) {
            return (ushort)o;
        }

        public static Func<object, object> GetConverter(Type fromTy, Type toTy)
        {
            Dictionary<Type, Func<object, object>> conv;
            if (_convTable.TryGetValue(fromTy, out conv))
            {
                Func<object, object> convFunc;
                if (conv.TryGetValue(toTy, out convFunc))
                {
                    return convFunc;
                }
            }

            return null;
        }
    }
}

